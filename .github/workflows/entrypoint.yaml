
name: entrypoint

on:
  workflow_call:
    outputs:
      constants:
        description: "Constants to use in CICD pipeline"
        value: ${{ jobs.entryPoint.outputs.constants }}
      artifactId:
        description: "ArtifactID from descriptor"
        value: ${{ jobs.entryPoint.outputs.artifactId }}
      version:
        description: "Version from descriptor"
        value: ${{ jobs.entryPoint.outputs.version }}
      branchName:
        description: "BranchName from GITHUB"
        value: ${{ vars.GITHUB_REF_NAME }}

jobs:
  entryPoint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Get constant yaml file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: token ${GITHUB_TOKEN}" https://raw.githubusercontent.com/jhflemosiaggbs/cicd-iaggbs/develop/.github/constants.yaml | yq . >> constants.yaml

      - name: Read constants yaml file
        id: constants
        uses: CumulusDS/get-yaml-paths-action@v1.0.1
        with:
          file: constants.yaml
          constant: constant

      - name: Get artifactId
        id: getArtifactId
        run: |
          export ARTIFACTID=$( mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout )
          echo "artifactId=$ARTIFACTID" >> $GITHUB_OUTPUT

      - name: Get version
        id: getVersion
        run: |
          export VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Print constant
        env:
          constant: ${{ steps.constants.outputs }}
        run: |
          echo yq .constant.job_name.deploy $constant
      
    outputs:
      constants : ${{ steps.constants.outputs.constants }}
      artifactId: ${{ steps.getArtifactId.outputs.artifactId }}
      version   : ${{ steps.getVersion.outputs.version }}
      branchName: ${{ steps.branchName.outputs.current_branch }}
